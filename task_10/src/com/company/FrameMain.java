package com.company;


import com.util.ArrayUtils;
import com.util.JTableUtils;
import com.util.SwingUtils;

import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;


public class FrameMain extends JFrame {
    private JPanel panelMain;
    private JTable tableInput1;

    private JButton buttonLoadInputFromFile1;
    private JButton buttonResult;
    private JTextField textField1;
    private JTextField textField3;
    private JTextField textField2;
    private JTextField textField4;


    private JFileChooser fileChooserOpen;
    private JFileChooser fileChooserSave;
    private JMenuBar menuBarMain;
    private JMenu menuLookAndFeel;


    public FrameMain() {
        this.setTitle("FrameMain");
        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();

        JTableUtils.initJTableForArray(tableInput1, 40, true, true, true, false);
        tableInput1.setRowHeight(25);

        fileChooserOpen = new JFileChooser();
        fileChooserSave = new JFileChooser();
        fileChooserOpen.setCurrentDirectory(new File("."));
        fileChooserSave.setCurrentDirectory(new File("."));
        FileFilter filter = new FileNameExtensionFilter("Text files", "txt");
        fileChooserOpen.addChoosableFileFilter(filter);
        fileChooserSave.addChoosableFileFilter(filter);

        fileChooserSave.setAcceptAllFileFilterUsed(false);
        fileChooserSave.setDialogType(JFileChooser.SAVE_DIALOG);
        fileChooserSave.setApproveButtonText("Save");

        menuBarMain = new JMenuBar();
        setJMenuBar(menuBarMain);

        menuLookAndFeel = new JMenu();
        menuLookAndFeel.setText("Вид");
        menuBarMain.add(menuLookAndFeel);
        SwingUtils.initLookAndFeelMenu(menuLookAndFeel);

        JTableUtils.writeArrayToJTable(tableInput1, new int[][]{
        });
        this.pack();


        buttonLoadInputFromFile1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                try {
                    if (fileChooserOpen.showOpenDialog(panelMain) == JFileChooser.APPROVE_OPTION) {
                        int[][] arr = ArrayUtils.readIntArray2FromFile(fileChooserOpen.getSelectedFile().getPath());
                        int a = arr[arr.length-1][0];
                        int [][] arr2 = new int[arr.length - 1][arr[0].length];
                        for (int i = 0; i < arr2.length; i++) {
                            arr2[i][0] = arr[i][0];
                            arr2[i][1] = arr[i][1];
                        }
                        JTableUtils.writeArrayToJTable(tableInput1, arr2);
                        textField4.setText(String.valueOf(a));
                    }
                } catch (Exception e) {
                    SwingUtils.showErrorMessageBox(e);
                }
            }
        });

        buttonResult.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                try {
                    StringBuilder a = new StringBuilder();
                    int[][] arr1 = JTableUtils.readIntMatrixFromJTable(tableInput1);
                    ArrayList<Candy> candies = new ArrayList<>();
                    assert arr1 != null;
                    for (int[] values : arr1) {
                        Candy element = new Candy(values[0],values[1]);
                        candies.add(element);
                    }
                    candies.sort(Comparator.comparing(x -> x.price));
                    int money = Integer.parseInt(textField4.getText());
                    for (int i = 0; i < Solution.solution(candies, money).size() - 1; i++) {
                        a.append(Solution.solution(candies, money).get(i).name).append(" ");
                    }
                    textField3.setText("Список конфет: " + a);
                    textField1.setText("Покупка " + (Solution.solution(candies,money).size() - 1) + " кг конфет");
                    textField2.setText("Сдача: " + Solution.solution(candies,money).get(Solution.solution(candies, money).size() - 1).price + " руб");
                } catch (Exception e) {
                    SwingUtils.showErrorMessageBox(e);
                }
            }
        });

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
